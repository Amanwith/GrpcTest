import autogenerated.*;
import entity.Book;
import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;

import java.util.ArrayList;
import java.util.List;

public class BookService {
    private static final String host="localhost";
    private static final int serverPort =9999;
    private static ManagedChannel managedChannel;
    private static LibraryServiceGrpc.LibraryServiceBlockingStub calService;

    static{
        //建立连接
        managedChannel = ManagedChannelBuilder.forAddress(host, serverPort).usePlaintext().build();
        calService = LibraryServiceGrpc.newBlockingStub(managedChannel);
    }
    public static boolean add(Book book){
        //构造rpc请求
        BookRequest request = BookRequest.newBuilder().setName(book.name).setId(book.id).build();
//        System.out.println("send rpc request  :  5 + 3");
        //发送请求并等待响应
        addResponse response = calService.add(request);
        //输出结果
        //System.out.println("get rpc response : "+response.getSuccess());
        return response.getSuccess();
    }

    public static Book queryByID(String id){
        SelectBookByIDRequest request = SelectBookByIDRequest.newBuilder().setId(id).build();
        ExactBookResponse response = calService.queryById(request);
        BookRequest bookRequest = response.getBook();
        String name = bookRequest.getName();
        Book book = new Book();
        book.setId(id);
        book.setName(name);
        return book;
    }

    public static List<Book> queryByName(String name){
        SelectBookByNameRequest request = SelectBookByNameRequest.newBuilder().setName(name).build();
        VagueBookResponse response = calService.queryByName(request);
        List<Book> bookList = new ArrayList<>();
        List<BookRequest> bookRequests = response.getBookListList();
        for(BookRequest bookRequest:bookRequests){
            String exactName = bookRequest.getName();
            String id = bookRequest.getId();
            Book book = new Book();
            book.setId(id);
            book.setName(exactName);
            bookList.add(book);
        }
        return bookList;
    }
    public static boolean delete(String id){
        //构造rpc请求
        DeleteRequest request = DeleteRequest.newBuilder().setId(id).build();
//        System.out.println("send rpc request  :  5 + 3");
        //发送请求并等待响应
        deleteResponse response = calService.delete(request);
        //输出结果
        System.out.println("get rpc response : "+response.getSuccess());
        return response.getSuccess();
    }
    public static void shutDown(){
        managedChannel.shutdown();
    }

}
